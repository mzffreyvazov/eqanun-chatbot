# Port for development server (default: 3000)
PORT=3000

# Generate a random secret: https://generate-secret.vercel.app/32 or `openssl rand -base64 32`
AUTH_SECRET=""

# The following keys below are automatically created and
# added to your environment when you deploy on vercel

# AI Gateway API Key (required for non-Vercel deployments)
# For Vercel deployments, OIDC tokens are used automatically
AI_GATEWAY_API_KEY=****


# Instructions to create a Vercel Blob Store here: https://vercel.com/docs/storage/vercel-blob
BLOB_READ_WRITE_TOKEN=****

# Instructions to create a PostgreSQL database here: https://vercel.com/docs/storage/vercel-postgres/quickstart
POSTGRES_URL=****


# Redis Configuration (Optional - Enables Resumable Streaming)
# Instructions: https://vercel.com/docs/storage/vercel-kv
# Format: redis://[:password]@host:port or rediss://[:password]@host:port (with TLS)
# For local development: redis://localhost:6379
# Cloud providers: Upstash, Redis Cloud, Vercel KV
REDIS_URL=****

# RAG Backend Configuration
# Development URL for document retrieval service
RAG_BACKEND_URL=http://localhost:8000

# Production URL for document retrieval service (set in production)
RAG_BACKEND_URL_PRODUCTION=https://your-production-rag-backend.com

# Supabase Authentication (required for RAG backend integration)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=****
SUPABASE_SERVICE_ROLE_KEY=****
SUPABASE_JWT_SECRET=****
SUPABASE_JWT_AUDIENCE=authenticated
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=****

# Authentication Provider configuration shared with the RAG backend
AUTH_PROVIDER=supabase
ENABLE_JWT_AUTH=true

# Optional token revocation support (reuses REDIS_URL above)
ENABLE_TOKEN_BLACKLIST=false
